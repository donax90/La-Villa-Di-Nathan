/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.donatotanieli.lavilladinathan.gui;

import com.donatotanieli.lavilladinathan.database.DBConnection;
import com.donatotanieli.lavilladinathan.game.Game;
import com.donatotanieli.lavilladinathan.gamefile.SaverLoaderClass;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;

/**
 * Interfaccia grafica del menu di scelta tra Nuova Partita o Carica Partita
 * @author donatotanieli
 */
public class MenuGUI extends javax.swing.JFrame {
    
    DBConnection dbConnection = new DBConnection();

    /**
     * Creates new form MenuGUI
     */
    public MenuGUI() {
        initComponents();
    }
    
    /**
     * Questo metodo si attiva se si preme il bottone Carica Partita e permette 
     * la scelta del file da caricare attraverso il JFileChooser
     */
    public void load(){
        JFileChooser fc = new JFileChooser();
        fc.setCurrentDirectory(new File(".//SaveFolder")); 
        SaverLoaderClass sc = new SaverLoaderClass();
        Game game = new Game(); //creo l'istanza per caricare il gioco
            try {
                if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                    String path = fc.getSelectedFile().getPath();    //percorso del file scelto
                    sc.loadFile(game, path);                        //invoco il metodo della classe che gestisce il caricamento
                    GameGUI gameGUI = new GameGUI(game);
                    gameGUI.setVisible(true);
                    dispose();
                }
            } catch (HeadlessException | IOException | ClassNotFoundException | BadLocationException e) {
                //mostra il messaggio di errore
                JOptionPane.showMessageDialog(null, "Errore: " + e.getMessage(), e.getMessage(), JOptionPane.ERROR_MESSAGE);
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNewGame = new javax.swing.JButton();
        btnLoadGame = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mostra_punteggi = new javax.swing.JButton();
        exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnNewGame.setFont(new java.awt.Font("Papyrus", 0, 13)); // NOI18N
        btnNewGame.setText("Nuova Partita");
        btnNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGame(evt);
            }
        });

        btnLoadGame.setFont(new java.awt.Font("Papyrus", 0, 13)); // NOI18N
        btnLoadGame.setText("Carica Partita");
        btnLoadGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadGameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Papyrus", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 0));
        jLabel1.setText("LA VILLA DI NATHAN");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Papyrus", 0, 14)); // NOI18N
        jLabel2.setText("Sviluppato da: DONATO TANIELI");

        mostra_punteggi.setFont(new java.awt.Font("Papyrus", 0, 13)); // NOI18N
        mostra_punteggi.setText("Mostra Punteggi");
        mostra_punteggi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostra_punteggiActionPerformed(evt);
            }
        });

        exit.setFont(new java.awt.Font("Papyrus", 0, 13)); // NOI18N
        exit.setText("Esci");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNewGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLoadGame, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(mostra_punteggi, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(exit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(49, 49, 49)
                .addComponent(btnNewGame)
                .addGap(18, 18, 18)
                .addComponent(btnLoadGame)
                .addGap(18, 18, 18)
                .addComponent(mostra_punteggi)
                .addGap(18, 18, 18)
                .addComponent(exit)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * ActionListener del bottone "Nuova Partita"
     * @param evt 
     */
    private void newGame(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGame

        //Istanzio e rendo visibile la nuova interfaccia del gioco
        GameGUI gameGUI;
        try {
            gameGUI = new GameGUI();
            gameGUI.setVisible(true);
            dispose();                          //chiudo l'interfaccia attuale
        } catch (BadLocationException ex) {
            Logger.getLogger(MenuGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_newGame

    /**
     * AcionListener del bottone "Carica Partita"
     * @param evt 
     */
    private void btnLoadGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadGameActionPerformed
        load();
    }//GEN-LAST:event_btnLoadGameActionPerformed

    /**
     * AcionListener del bottone "Mostra Punteggi"
     * @param evt 
     */
    private void mostra_punteggiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostra_punteggiActionPerformed
        String stringa = "Punteggi:\n\n";
        try {
            dbConnection.connect();
            stringa += dbConnection.getScores();          
        } catch (SQLException ex) {
            Logger.getLogger(MenuGUI.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            try {
                dbConnection.closeConnection();
            } catch (SQLException ex) {
                Logger.getLogger(MenuGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        JOptionPane.showMessageDialog(null, stringa, "PUNTEGGI", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_mostra_punteggiActionPerformed

    /**
     * AcionListener del bottone "Esci"
     * @param evt 
     */
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        dispose();
    }//GEN-LAST:event_exitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoadGame;
    private javax.swing.JButton btnNewGame;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton mostra_punteggi;
    // End of variables declaration//GEN-END:variables
}
